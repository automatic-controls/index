import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;
import com.controlj.green.addonsupport.access.*;
/**
 * Handles AJAX requests to load portions of the geographic tree into the GUI.
 */
public class MainGUI extends HttpServlet {
  public volatile static String name = null;
  private volatile static String data = null;
  public static synchronized boolean load(){
    if (data!=null){
      return true;
    }
    try{
      String[] arr = DirectAccess.getDirectAccess().getRootSystemConnection().runReadAction(FieldAccessFactory.newDisabledFieldAccess(), new ReadActionResult<String[]>(){
        public String[] execute(SystemAccess sys){
          Location geo = sys.getGeoRoot();
          return new String[]{geo.getDisplayName(), geo.getPersistentLookupString(true)};
        }
      });
      String geoRootName = arr[0];
      String geoRootPath = arr[1];
      StringBuilder sb = new StringBuilder(16384);
      sb.append("<!DOCTYPE html>\n");
      sb.append("<html>\n");
      sb.append("<head>\n");
      sb.append("<title>\n");
      sb.append("ACES Commissioner\n");
      sb.append("</title>\n");
      sb.append("<style>\n");
      sb.append(".option {\n");
      sb.append("margin-left:1em;\n");
      sb.append("margin-right:1em;\n");
      sb.append("}\n");
      sb.append(".checkbox {\n");
      sb.append("margin-left:1em;\n");
      sb.append("margin-right:0.3em;\n");
      sb.append("}\n");
      sb.append(".checkboxLabel {\n");
      sb.append("margin-right:1em;\n");
      sb.append("}\n");
      sb.append(".column {\n");
      sb.append("float:left;\n");
      sb.append("padding:1em;\n");
      sb.append("}\n");
      sb.append("</style>\n");
      sb.append("<script>\n");
      sb.append("function setupNode(n){\n");
      sb.append("let m = document.createElement(\"div\")\n");
      sb.append("m.style.marginLeft = \"1em\"\n");
      sb.append("n.parentNode.insertBefore(m, n.nextSibling)\n");
      sb.append("let checkbox = document.createElement(\"INPUT\")\n");
      sb.append("checkbox.type = \"checkbox\"\n");
      sb.append("n.parentNode.insertBefore(checkbox,n)\n");
      sb.append("n.onmouseover = function(){\n");
      sb.append("if (mouseDown){\n");
      sb.append("checkbox.checked^=true\n");
      sb.append("checkbox.onchange()\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("checkbox.onchange = function(){\n");
      sb.append("var x\n");
      sb.append("if (checkbox.checked){\n");
      sb.append("if (!n.expanded){\n");
      sb.append("n.expanded = true;\n");
      sb.append("n.expand()\n");
      sb.append("}\n");
      sb.append("let arr = m.getElementsByTagName(\"INPUT\")\n");
      sb.append("for (var i=0;i<arr.length;++i){\n");
      sb.append("x = arr[i]\n");
      sb.append("if (!x.checked){\n");
      sb.append("x.checked = true\n");
      sb.append("x.onchange()\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("}else if (!n.root){\n");
      sb.append("x = n.parentNode.previousSibling.previousSibling\n");
      sb.append("if (x.checked){\n");
      sb.append("x.checked = false\n");
      sb.append("x.onchange()\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("checkbox.checked = !n.root && n.parentNode.previousSibling.previousSibling.checked\n");
      sb.append("n.expanded = false\n");
      sb.append("n.expand = function(){\n");
      sb.append("let req = new XMLHttpRequest()\n");
      sb.append("req.open(\"POST\",\"/"+MainGUI.name+"/Expander\",true)\n");
      sb.append("req.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n");
      sb.append("req.onreadystatechange = function(){\n");
      sb.append("if (this.readyState==4 && this.status==200){\n");
      sb.append("let res = this.responseText\n");
      sb.append("var i,j,k,l,x\n");
      sb.append("k = false\n");
      sb.append("for (var i=0;i<res.length;){\n");
      sb.append("j = res.charCodeAt(i++)\n");
      sb.append("l = res.substr(i,j)\n");
      sb.append("i+=j\n");
      sb.append("k^=true\n");
      sb.append("if (k){\n");
      sb.append("x = document.createElement(\"BUTTON\")\n");
      sb.append("x.path = l\n");
      sb.append("}else{\n");
      sb.append("x.innerHTML = l\n");
      sb.append("m.appendChild(x)\n");
      sb.append("setupNode(x)\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("req.send(\"path=\"+n.path)\n");
      sb.append("}\n");
      sb.append("n.onclick = function(){\n");
      sb.append("n.expanded^=true\n");
      sb.append("if (n.expanded){\n");
      sb.append("n.expand()\n");
      sb.append("}else{\n");
      sb.append("while (m.firstChild){\n");
      sb.append("m.removeChild(m.lastChild)\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("function getData(div){\n");
      sb.append("let str = \"\"\n");
      sb.append("let arr = div.children\n");
      sb.append("var x\n");
      sb.append("for (var i=0;i<arr.length;++i){\n");
      sb.append("x = arr[i]\n");
      sb.append("if (x.tagName===\"BUTTON\"){\n");
      sb.append("if (x.previousSibling.checked){\n");
      sb.append("str = str.concat(x.path, ',')\n");
      sb.append("}else{\n");
      sb.append("str = str.concat(getData(x.nextSibling))\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("return str\n");
      sb.append("}\n");
      sb.append("function selectAll(){\n");
      sb.append("visibleAlarmCheckbox.checked = true\n");
      sb.append("ackAlarmCheckbox.checked = true\n");
      sb.append("balmPotAlarmCheckbox.checked = true\n");
      sb.append("catAlarmCheckbox.checked = true\n");
      sb.append("errorNetCheckbox.checked = true\n");
      sb.append("setupSchedulesCheckbox.checked = true\n");
      sb.append("visibleIOCheckbox.checked = true\n");
      sb.append("checkoutIOCheckbox.checked = true\n");
      sb.append("duplicateIOCheckbox.checked = true\n");
      sb.append("lockedIOCheckbox.checked = true\n");
      sb.append("errorIOCheckbox.checked = true\n");
      sb.append("errorTrendCheckbox.checked = true\n");
      sb.append("setupTrendCheckbox.checked = true\n");
      sb.append("trendBTRNCheckbox.checked = true\n");
      sb.append("}\n");
      sb.append("function deselectAll(){\n");
      sb.append("visibleAlarmCheckbox.checked = false\n");
      sb.append("ackAlarmCheckbox.checked = false\n");
      sb.append("balmPotAlarmCheckbox.checked = false\n");
      sb.append("catAlarmCheckbox.checked = false\n");
      sb.append("errorNetCheckbox.checked = false\n");
      sb.append("setupSchedulesCheckbox.checked = false\n");
      sb.append("visibleIOCheckbox.checked = false\n");
      sb.append("checkoutIOCheckbox.checked = false\n");
      sb.append("duplicateIOCheckbox.checked = false\n");
      sb.append("lockedIOCheckbox.checked = false\n");
      sb.append("errorIOCheckbox.checked = false\n");
      sb.append("errorTrendCheckbox.checked = false\n");
      sb.append("setupTrendCheckbox.checked = false\n");
      sb.append("trendBTRNCheckbox.checked = false\n");
      sb.append("}\n");
      sb.append("function checkModify(){\n");
      sb.append("if (modifyCheckbox.checked){\n");
      sb.append("if (devMode){\n");
      sb.append("visibleAlarmCheckbox.disabled = false\n");
      sb.append("ackAlarmCheckbox.disabled = false\n");
      sb.append("balmPotAlarmCheckbox.disabled = false\n");
      sb.append("catAlarmCheckbox.disabled = true\n");
      sb.append("errorNetCheckbox.disabled = true\n");
      sb.append("setupSchedulesCheckbox.disabled = true\n");
      sb.append("visibleIOCheckbox.disabled = false\n");
      sb.append("checkoutIOCheckbox.disabled = true\n");
      sb.append("duplicateIOCheckbox.disabled = true\n");
      sb.append("lockedIOCheckbox.disabled = false\n");
      sb.append("errorIOCheckbox.disabled = true\n");
      sb.append("errorTrendCheckbox.disabled = true\n");
      sb.append("setupTrendCheckbox.disabled = false\n");
      sb.append("}else{\n");
      sb.append("visibleAlarmCheckbox.disabled = false\n");
      sb.append("ackAlarmCheckbox.disabled = false\n");
      sb.append("balmPotAlarmCheckbox.disabled = false\n");
      sb.append("catAlarmCheckbox.disabled = true\n");
      sb.append("errorNetCheckbox.disabled = true\n");
      sb.append("setupSchedulesCheckbox.disabled = true\n");
      sb.append("visibleIOCheckbox.disabled = false\n");
      sb.append("checkoutIOCheckbox.disabled = true\n");
      sb.append("duplicateIOCheckbox.disabled = true\n");
      sb.append("lockedIOCheckbox.disabled = true\n");
      sb.append("errorIOCheckbox.disabled = true\n");
      sb.append("errorTrendCheckbox.disabled = true\n");
      sb.append("setupTrendCheckbox.disabled = false\n");
      sb.append("}\n");
      sb.append("}else{\n");
      sb.append("visibleAlarmCheckbox.disabled = false\n");
      sb.append("ackAlarmCheckbox.disabled = false\n");
      sb.append("balmPotAlarmCheckbox.disabled = false\n");
      sb.append("catAlarmCheckbox.disabled = false\n");
      sb.append("errorNetCheckbox.disabled = false\n");
      sb.append("setupSchedulesCheckbox.disabled = false\n");
      sb.append("visibleIOCheckbox.disabled = false\n");
      sb.append("checkoutIOCheckbox.disabled = false\n");
      sb.append("duplicateIOCheckbox.disabled = false\n");
      sb.append("lockedIOCheckbox.disabled = false\n");
      sb.append("errorIOCheckbox.disabled = false\n");
      sb.append("errorTrendCheckbox.disabled = false\n");
      sb.append("setupTrendCheckbox.disabled = false\n");
      sb.append("}\n");
      sb.append("checkBTRN();\n");
      sb.append("}\n");
      sb.append("function checkBTRN(){\n");
      sb.append("trendBTRNCheckbox.disabled = (!errorTrendCheckbox.checked || errorTrendCheckbox.disabled) && (!setupTrendCheckbox.checked || setupTrendCheckbox.disabled)\n");
      sb.append("}\n");
      sb.append("function validateSubmit(){\n");
      sb.append("executeButton.disabled = true\n");
      sb.append("let ready = false\n");
      sb.append("ready|=visibleAlarmCheckbox.checked && !visibleAlarmCheckbox.disabled\n");
      sb.append("ready|=ackAlarmCheckbox.checked && !ackAlarmCheckbox.disabled\n");
      sb.append("ready|=balmPotAlarmCheckbox.checked && !balmPotAlarmCheckbox.disabled\n");
      sb.append("ready|=catAlarmCheckbox.checked && !catAlarmCheckbox.disabled\n");
      sb.append("ready|=errorNetCheckbox.checked && !errorNetCheckbox.disabled\n");
      sb.append("ready|=setupSchedulesCheckbox.checked && !setupSchedulesCheckbox.disabled\n");
      sb.append("ready|=visibleIOCheckbox.checked && !visibleIOCheckbox.disabled\n");
      sb.append("ready|=checkoutIOCheckbox.checked && !checkoutIOCheckbox.disabled\n");
      sb.append("ready|=duplicateIOCheckbox.checked && !duplicateIOCheckbox.disabled\n");
      sb.append("ready|=lockedIOCheckbox.checked && !lockedIOCheckbox.disabled\n");
      sb.append("ready|=errorIOCheckbox.checked && !errorIOCheckbox.disabled\n");
      sb.append("ready|=errorTrendCheckbox.checked && !errorTrendCheckbox.disabled\n");
      sb.append("ready|=setupTrendCheckbox.checked && !setupTrendCheckbox.disabled\n");
      sb.append("ready|=trendBTRNCheckbox.checked && !trendBTRNCheckbox.disabled\n");
      sb.append("if (ready){\n");
      sb.append("data.value = getData(rootDiv)\n");
      sb.append("if (data.value.length==0){\n");
      sb.append("alert(\"Please make a selection on the geographic tree.\")\n");
      sb.append("executeButton.disabled = false\n");
      sb.append("return false\n");
      sb.append("}else if (modifyCheckbox.checked){\n");
      sb.append("rootDiv.style.pointerEvents = \"none\"\n");
      sb.append("let req = new XMLHttpRequest()\n");
      sb.append("req.open(\"POST\",\"/"+MainGUI.name+"/Checker\",true)\n");
      sb.append("req.setRequestHeader(\"content-type\", \"application/x-www-form-urlencoded\")\n");
      sb.append("req.onreadystatechange = function(){\n");
      sb.append("if (this.readyState==4){\n");
      sb.append("if (this.status==200){\n");
      sb.append("selectionDiv.innerHTML = this.responseText\n");
      sb.append("selectionReviewDiv.hidden = false\n");
      sb.append("}else{\n");
      sb.append("alert(\"Response Code: \"+this.status+'\\n'+this.responseText)\n");
      sb.append("rootDiv.style.pointerEvents = \"auto\"\n");
      sb.append("executeButton.disabled = false\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("req.send(\"data=\"+encodeURIComponent(data.value))\n");
      sb.append("return false\n");
      sb.append("}else{\n");
      sb.append("executeButton.disabled = false\n");
      sb.append("return true\n");
      sb.append("}\n");
      sb.append("}else{\n");
      sb.append("alert(\"Please specify which properties you want to commission.\")\n");
      sb.append("executeButton.disabled = false\n");
      sb.append("return false\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("function confirmSelections(){\n");
      sb.append("mainForm.submit()\n");
      sb.append("refuseSelections()\n");
      sb.append("}\n");
      sb.append("function refuseSelections(){\n");
      sb.append("selectionReviewDiv.hidden = true\n");
      sb.append("selectionDiv.innerHTML = \"\"\n");
      sb.append("rootDiv.style.pointerEvents = \"auto\"\n");
      sb.append("executeButton.disabled = false\n");
      sb.append("}\n");
      sb.append("</script>\n");
      sb.append("</head>\n");
      sb.append("<body>\n");
      sb.append("<div style=\"text-align:center\">\n");
      sb.append("<h1>ACES Commissioner</h1>\n");
      sb.append("<form action=\"help.pdf\" method=\"GET\" target=\"_blank\" id=\"helpForm\"></form>\n");
      sb.append("<form action=\"summary.jsp\" method=\"GET\" id=\"summaryForm\"></form>\n");
      sb.append("<form action=\"Executor\" method=\"POST\" target=\"_blank\" onsubmit=\"return validateSubmit()\" id=\"mainForm\">\n");
      sb.append("<input type=\"hidden\" name=\"data\" id=\"data\">\n");
      sb.append("<input type=\"submit\" value=\"Execute\" id=\"executeButton\" class=\"option\">\n");
      sb.append("<button type=\"button\" onclick=\"deselectAll()\" class=\"option\">Deselect All</button>\n");
      sb.append("<button type=\"button\" onclick=\"selectAll()\" class=\"option\">Select All</button>\n");
      sb.append("<button type=\"button\" onclick=\"summaryForm.submit()\" class=\"option\">Task Summary</button>\n");
      sb.append("<button type=\"button\" onclick=\"helpForm.submit()\" class=\"option\">Help</button>\n");
      sb.append("<input type=\"checkbox\" name=\"modify\" id=\"modifyCheckbox\" class=\"checkbox\" onchange=\"checkModify()\">\n");
      sb.append("<label for=\"modifyCheckbox\" class=\"checkboxLabel\">Modify</label>\n");
      sb.append("<br><br>\n");
      sb.append("<input type=\"checkbox\" name=\"visibleAlarm\" id=\"visibleAlarmCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"visibleAlarmCheckbox\" class=\"checkboxLabel\">Alarm Network Visibility</label>\n");
      sb.append("<input type=\"checkbox\" name=\"ackAlarm\" id=\"ackAlarmCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"ackAlarmCheckbox\" class=\"checkboxLabel\">Alarm Acknowledgement</label>\n");
      sb.append("<input type=\"checkbox\" name=\"balmPotAlarm\" id=\"balmPotAlarmCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"balmPotAlarmCheckbox\" class=\"checkboxLabel\">Potential Alarm Sources</label>\n");
      sb.append("<input type=\"checkbox\" name=\"catAlarm\" id=\"catAlarmCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"catAlarmCheckbox\" class=\"checkboxLabel\">Alarm Categories</label>\n");
      sb.append("<input type=\"checkbox\" name=\"errorNet\" id=\"errorNetCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"errorNetCheckbox\" class=\"checkboxLabel\">Network Point Errors</label>\n");
      sb.append("<input type=\"checkbox\" name=\"setupSchedules\" id=\"setupSchedulesCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"setupSchedulesCheckbox\" class=\"checkboxLabel\">Schedules</label>\n");
      sb.append("<br>\n");
      sb.append("<input type=\"checkbox\" name=\"visibleIO\" id=\"visibleIOCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"visibleIOCheckbox\" class=\"checkboxLabel\">I/O Network Visibility</label>\n");
      sb.append("<input type=\"checkbox\" name=\"checkoutIO\" id=\"checkoutIOCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"checkoutIOCheckbox\" class=\"checkboxLabel\">I/O Point Checkout</label>\n");
      sb.append("<input type=\"checkbox\" name=\"duplicateIO\" id=\"duplicateIOCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"duplicateIOCheckbox\" class=\"checkboxLabel\">Duplicate I/O Points</label>\n");
      sb.append("<input type=\"checkbox\" name=\"lockedIO\" id=\"lockedIOCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"lockedIOCheckbox\" class=\"checkboxLabel\">Locked I/O Points</label>\n");
      sb.append("<input type=\"checkbox\" name=\"errorIO\" id=\"errorIOCheckbox\" class=\"checkbox\">\n");
      sb.append("<label for=\"errorIOCheckbox\" class=\"checkboxLabel\">I/O Point Errors</label>\n");
      sb.append("<input type=\"checkbox\" name=\"errorTrend\" id=\"errorTrendCheckbox\" class=\"checkbox\" onchange=\"checkBTRN()\">\n");
      sb.append("<label for=\"errorTrendCheckbox\" class=\"checkboxLabel\">Trending Errors</label>\n");
      sb.append("<input type=\"checkbox\" name=\"setupTrend\" id=\"setupTrendCheckbox\" class=\"checkbox\" onchange=\"checkBTRN()\">\n");
      sb.append("<label for=\"setupTrendCheckbox\" class=\"checkboxLabel\">Historians</label>\n");
      sb.append("<input type=\"checkbox\" name=\"trendBTRN\" id=\"trendBTRNCheckbox\" class=\"checkbox\" disabled>\n");
      sb.append("<label for=\"trendBTRNCheckbox\" class=\"checkboxLabel\">Include BTRN Network Trends</label>\n");
      sb.append("</form>\n");
      sb.append("</div>\n");
      sb.append("<script>\n");
      sb.append("var mouseDown = false\n");
      sb.append("document.onmousedown = function(){\n");
      sb.append("mouseDown = true\n");
      sb.append("}\n");
      sb.append("document.onmouseup = function(){\n");
      sb.append("mouseDown = false\n");
      sb.append("}\n");
      sb.append("var rootDiv = document.createElement(\"div\")\n");
      sb.append("rootDiv.className = \"column\"\n");
      sb.append("rootDiv.style.userSelect = \"none\"\n");
      sb.append("rootDiv.style.webkitUserSelect = \"none\"\n");
      sb.append("let root = document.createElement(\"button\")\n");
      sb.append("root.innerHTML = \""+geoRootName+"\"\n");
      sb.append("root.path = \""+geoRootPath+"\"\n");
      sb.append("rootDiv.appendChild(root)\n");
      sb.append("root.root = true\n");
      sb.append("setupNode(root)\n");
      sb.append("document.body.appendChild(rootDiv)\n");
      sb.append("var devMode = false\n");
      sb.append("var devModeC = 0\n");
      sb.append("document.body.onkeypress = function(e){\n");
      sb.append("if ((devModeC==0 && e.key==\"D\") || (devModeC==1 && e.key==\"E\") || (devModeC==2 && e.key==\"V\")){\n");
      sb.append("if (devModeC==2){\n");
      sb.append("devModeC = 0\n");
      sb.append("devMode^=true\n");
      sb.append("checkModify()\n");
      sb.append("}else{\n");
      sb.append("++devModeC\n");
      sb.append("}\n");
      sb.append("}else{\n");
      sb.append("devModeC = 0\n");
      sb.append("}\n");
      sb.append("}\n");
      sb.append("</script>\n");
      sb.append("<div class=\"column\" id=\"selectionReviewDiv\" style=\"margin-left:3em\" hidden>\n");
      sb.append("<h3>Review Changes</h3>\n");
      sb.append("The following control programs will be affected.<br>\n");
      sb.append("Are you sure you want to continue?<br><br>\n");
      sb.append("<button onclick=\"confirmSelections()\" class=\"option\">Yes</button>\n");
      sb.append("<button onclick=\"refuseSelections()\" class=\"option\">No</button>\n");
      sb.append("<div id=\"selectionDiv\"></div>\n");
      sb.append("</div>\n");
      sb.append("</body>\n");
      sb.append("</html>\n");
      data = sb.toString();
      return true;
    }catch(Exception e){
      return false;
    }
  }
  @Override protected void doGet(final HttpServletRequest req, final HttpServletResponse res) throws ServletException, IOException {
    doPost(req, res);
  }
  @Override protected void doPost(final HttpServletRequest req, final HttpServletResponse res) throws ServletException, IOException {
    PrintWriter out = res.getWriter();
    if (load()){
      res.setContentType("text/html");
      out.print(data);
    }else{
      res.setContentType("text/plain");
      out.print("Unable to load geographic tree.");
    }
    out.flush();
  }
}